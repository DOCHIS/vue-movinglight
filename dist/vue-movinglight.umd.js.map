{"version":3,"file":"vue-movinglight.umd.js","sources":["../src/components/MovingLight.vue","../src/index.ts"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"moving-light\"\r\n    :class=\"`mount-${props.position}`\"\r\n    :style=\"lightStyle\"\r\n  >\r\n    <div class=\"light-base\">\r\n      <div class=\"light-head\">\r\n        <div class=\"light-yoke\">\r\n          <div class=\"light-fixture\">\r\n            <div\r\n              class=\"light-beam\"\r\n              :class=\"{ 'with-prism': props.prismEnabled }\"\r\n              :data-facets=\"props.prismFacets\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed } from \"vue\";\r\nimport \"../styles/movinglight.scss\";\r\nimport type { MovingLightProps } from \"../types\";\r\nimport type { CSSProperties } from \"vue\";\r\n\r\ninterface CustomCSSProperties extends CSSProperties {\r\n  [key: `--${string}`]: string | number;\r\n}\r\n\r\nconst props = withDefaults(defineProps<MovingLightProps>(), {\r\n  position: \"top\",\r\n  positionType: \"fixed\",\r\n  pan: 0,\r\n  tilt: 0,\r\n  panSpeed: 90,\r\n  tiltSpeed: 90,\r\n  color: \"#ffffff\",\r\n  intensity: 100,\r\n  beamWidth: 10,\r\n  beamLength: 1000,\r\n  prismEnabled: false,\r\n  prismFacets: 3,\r\n  prismRotation: 0,\r\n});\r\n\r\n// Calculate movement time based on angle difference and speed\r\nconst calculateMovementTime = (\r\n  currentAngle: number,\r\n  targetAngle: number,\r\n  speed: number\r\n): string => {\r\n  const diff = Math.abs(targetAngle - currentAngle);\r\n  return `${diff / speed}s`;\r\n};\r\n\r\n// Compute dynamic styles including movement timing\r\nconst lightStyle = computed<CustomCSSProperties>(() => {\r\n  const panDuration = calculateMovementTime(0, props.pan, props.panSpeed);\r\n  const tiltDuration = calculateMovementTime(0, props.tilt, props.tiltSpeed);\r\n\r\n  return {\r\n    position: props.positionType,\r\n    \"--pan-angle\": `${props.pan}deg`,\r\n    \"--tilt-angle\": `${props.tilt}deg`,\r\n    \"--pan-duration\": panDuration,\r\n    \"--tilt-duration\": tiltDuration,\r\n    \"--beam-color\": props.color,\r\n    \"--beam-width\": props.beamWidth,\r\n    \"--beam-length\": `${props.beamLength}px`,\r\n    \"--beam-intensity\": props.intensity / 100,\r\n    \"--prism-rotation\": `${props.prismRotation}deg`,\r\n  };\r\n});\r\n</script>\r\n","// src\\index.ts\r\nimport { App } from \"vue\";\r\nimport MovingLight from \"./components/MovingLight.vue\";\r\nexport { MovingLight };\r\nexport default {\r\n  install: (app: App) => {\r\n    app.component(\"MovingLight\", MovingLight);\r\n    app.component(\"moving-light\", MovingLight);\r\n  },\r\n};\r\n"],"names":["props","__props","calculateMovementTime","currentAngle","targetAngle","speed","Math","abs","lightStyle","computed","panDuration","pan","panSpeed","tiltDuration","tilt","tiltSpeed","position","positionType","color","beamWidth","beamLength","intensity","prismRotation","index","install","app","component","MovingLight"],"mappings":"msOAgCA,MAAMA,EAAQC,EAiBRC,EAAwB,CAC5BC,EACAC,EACAC,IAEaC,KAAKC,IAAIH,EAAcD,GACnBE,EAAV,IAIHG,EAAaC,EAAAA,UAA8B,KAC/C,MAAMC,EAAcR,EAAsB,EAAGF,EAAMW,IAAKX,EAAMY,UACxDC,EAAeX,EAAsB,EAAGF,EAAMc,KAAMd,EAAMe,WAEzD,MAAA,CACLC,SAAUhB,EAAMiB,aAChB,cAAe,GAAGjB,EAAMW,SACxB,eAAgB,GAAGX,EAAMc,UACzB,iBAAkBJ,EAClB,kBAAmBG,EACnB,eAAgBb,EAAMkB,MACtB,eAAgBlB,EAAMmB,UACtB,gBAAiB,GAAGnB,EAAMoB,eAC1B,mBAAoBpB,EAAMqB,UAAY,IACtC,mBAAoB,GAAGrB,EAAMsB,mBAC/B,8aCtEaC,EAAA,CACbC,QAAUC,IACJA,EAAAC,UAAU,cAAeC,GACzBF,EAAAC,UAAU,eAAgBC,EAAW"}